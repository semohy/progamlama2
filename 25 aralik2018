# -*- coding: utf-8 -*-
"""
Spyder Editor

This is a temporary script file.
"""
headers = ["Siparis_id","yemek id","yemek_adı","Fiyat"];
import pandas as pd
siparisler = pd.read_table('C:/Users/user/Desktop/deneme.csv',sep=",",names=headers)
print(siparisler) #print(type()), data frame olduğunu yazar...
print(type(siparisler))
print(siparisler["Fiyat"]) # ~~ print(siparisler.Fiyat) 
print(type(siparisler["Fiyat"])) #data frame 1 sütunu seridir...
print(siparisler.shape) # boyutu basar 4x4 dedi
print(siparisler.yemek_adı+" "+siparisler.Fiyat)
print(siparisler.describe())
siparisler.drop('Siparis_id',axis=1,inplace=True) #Siparis_id  sütunu silindi
print(siparisler)
print(siparisler.sort_values('Fiyat',ascending="True")) # ascening true false

# -*- coding: utf-8 -*-
"""
Spyder Editor

This is a temporary script file.
"""
# 25 December 2018 LESSON 2 Prediction... 
#train ve test olarak 2 ye ayır,
#veriler arası ilişki çözülür test verisi tahminlemeye calısılır gercek verilerle karsılastırılır...
#%33 train ayrılır literatur olarak
import pandas as pd
import matplotlib.pyplot as plt

veriseti={'haftalar':[1,2,3,4,5,6,7,8],'degerler':[57,48,67,55,13,21,82,64]}

df=pd.DataFrame(data=veriseti)

haftalar=df[["haftalar"]]
degerler=df[["degerler"]] # tek köseli parantez seri cift dataframe cekiyor (column)

from sklearn.cross_validation import train_test_split
x_train,x_test,y_train,y_test = train_test_split(haftalar,degerler,test_size=0.33,random_state=0)

from sklearn.linear_model import LinearRegression
lr=LinearRegression() #en basiti
lr.fit(x_train,y_train)
lr_tahmin=lr.predict(9)
print(lr_tahmin)

from sklearn.ensemble import RandomForestRegressor
rf_reg = RandomForestRegressor(n_estimators=10,random_state=0)
rf_reg.fit(haftalar,degerler)
rfg_result = rf_reg.predict(9)
print("Random Forest:",rfg_result)

from sklearn.preprocessing import PolynomialFeatures
poly_reg = PolynomialFeatures(degree=1)
haftalar_poly = poly_reg.fit_transform(haftalar)
lin_reg2=LinearRegression()
lin_reg2.fit(haftalar_poly,degerler)
poly_result =lin_reg2.predict(poly_reg.fit_transform(9))
print("Poliynominal:",poly_result)

kt = (poly_result+rfg_result)/2
print("Kendi Tahminim: %f"%kt)

plt.plot(haftalar,degerler,color="blue")
plt.plot(x_test,rf_reg.predict(x_test),color="red")
plt.plot(x_test,lr.predict(x_test),color="green")
plt.xlabel("Haftalar")
plt.ylabel("Değerler")



